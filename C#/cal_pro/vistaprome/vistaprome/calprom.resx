<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.InitialImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>